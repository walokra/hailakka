{"version":3,"sources":["controllers/api.ts","reducers/index.js","components/Header.js","context/CategoryContext.tsx","components/utils.ts","components/SectionHeader.tsx","screens/HomeScreen.tsx","components/Switch.jsx","screens/SettingsScreen.tsx","store/index.js","App.tsx","hooks/useCachedResources.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["createApiEndpoint","domainToUse","endpoint","init","method","headers","Accept","INITIAL_STATE","darkModeEnabled","combineReducers","Settings","state","action","console","debug","type","payload","Header","props","colors","useTheme","useSelector","dispatch","useDispatch","View","style","styles","switchContainerStyle","titleWrapper","Text","switchTitleStyle","color","text","switchWrapperStyle","value","onChange","StyleSheet","create","padding","minHeight","alignItems","flexDirection","flex","paddingLeft","paddingRight","fontSize","fontWeight","justifyContent","position","CategoryContext","createContext","htmlFilename","title","getOrder","datetime","startDate","DateTime","fromISO","diff","now","toObject","days","hours","minutes","timeSince","diffNow","Math","abs","container","alignSelf","paddingVertical","SectionHeader","section","backgroundColor","background","Homescreen","route","navigation","useContext","useState","sections","setSections","loading","setLoading","error","setError","useEffect","apiRequest","Request","fetch","then","response","a","async","json","data","responseData","feed","entries","items","i","range","forEach","entry","push","newsEntries","map","item","index","article","publishedDateJS","orderNo","publishedDate","toLocal","toFormat","sort","b","catch","finally","isLoading","ActivityIndicator","animating","isError","card","contentContainerStyle","contentContainer","Object","keys","key","articleContainer","TouchableOpacity","onPress","WebBrowser","link","entryContainer","Image","source","uri","picture","entryImage","entryContent","author","description","shortDescription","footerContainer","handlePoweredPress","footerInfoText","linkText","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","android","elevation","textAlign","paddingHorizontal","paddingTop","minWidth","marginTop","defaultContainerStyle","defaultTitleStyle","defaultDescriptionStyle","defaultSwitchWrapperStyle","marginRight","defaultDisabledOverlayStyle","top","SettingsSwitch","this","containerProps","containerStyle","titleProps","titleStyle","disabled","switchProps","disabledOverlayStyle","switchWrapperProps","trackColor","onValueChange","descriptionProps","descriptionStyle","Switch","Component","propTypes","PropTypes","object","string","isRequired","bool","func","shape","true","false","defaultProps","SettingsScreen","isMobileModeEnabled","setIsMobileModeEnabled","OptionButton","icon","label","isLastOption","log","option","lastOption","optionIconContainer","Ionicons","name","size","optionText","marginLeft","borderBottomWidth","borderColor","middleware","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","compose","createStore","reducer","CustomDrawerContent","DrawerContentScrollView","DrawerItemList","Drawer","createDrawerNavigator","Stack","createStackNavigator","Root","Provider","Navigator","Screen","component","HomeScreen","options","EmptyScreen","App","isLoadingComplete","React","setLoadingComplete","SplashScreen","Font","font","require","warn","useCachedResources","colorScheme","useColorScheme","isLargeScreen","Dimensions","get","categories","setCategories","themeStatusBarStyle","mostPopularName","genericNewsURLPart","latestName","useToRetrieveLists","sectionID","selected","depth","latest","url","Error","message","listCategories","NavigationContainer","theme","DarkTheme","DefaultTheme","StatusBar","barStyle","drawerType","drawerStyle","overlayColor","drawerContent","initialRouteName","length","children","drawerLabel","AppContainer","store","header","navigator","window","addEventListener","serviceWorker","register","scope","info","module","exports"],"mappings":"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","file":"static/js/app.475d0ecc.chunk.js","sourcesContent":["import { Platform } from 'react-native';\n\n// import { Language } from '../models/Language';\nimport { Category } from '../models/Category';\n\n// const HIGH_FI_API = 'json-private';\nconst API_KEY = '1234567890';\nconst USER_AGENT = 'Highlakka, (0.0.1)-(1) (RN)';\n// const domainToUse = 'high.fi';\n\n// http://en.high.fi/api/help\n\n// const domainToUse =\n//   Platform.OS === 'web'\n//     ? 'cors-anywhere.herokuapp.com/https://high.fi/'\n//     : 'high.fi';\n\n// const apiEndpoint =\n//   Platform.OS === 'web'\n//     ? 'https://cors-anywhere.herokuapp.com/https://fi.high.fi/uutiset/json-private?APIKEY=1234567890'\n//     : 'https://fi.high.fi/uutiset/json-private?APIKEY=1234567890';\n\n// const proxy = Platform.OS === 'web' ? 'http://0.0.0.0:8080/' : '';\nconst proxy = '';\n\nexport const createApiEndpoint = (domainToUse: string, endpoint: string) => {\n  return `${proxy}https://${domainToUse}/${endpoint}`;\n};\n\nconst init: RequestInit = {\n  method: 'GET',\n  headers: {\n    Accept: 'application/json',\n    'User-Agent': USER_AGENT,\n  },\n};\n\n// export function load(source: Object, domainToUse: string, hideSections: [], onSuccess, onFailure) {\n//     var url = \"http://\" + domainToUse + \"/\" + source.htmlFilename + \"/\" + HIGH_FI_API + \"?APIKEY=\" + API_KEY;\n//     if (hideSections && hideSections.length > 0) {\n//         url +=\"&jsonHideSections=\" + hideSections.join();\n//     }\n//     console.debug(\"highfi.js, load(source=\"  + JSON.stringify(source) + \"), hideSections=\" + hideSections + \", url=\" + url);\n\n//     var req = new XMLHttpRequest;\n//     req.open(\"GET\", url);\n//     req.onreadystatechange = function() {\n//         if (req.readyState === XMLHttpRequest.DONE) {\n//             if (req.status == 200 ) {\n//                 //console.debug(\"200: \" + req.responseText);\n//                 var jsonObject = JSON.parse(req.responseText);\n//                 onSuccess(jsonObject);\n//             } else {\n//                 onFailure(req.status, req.responseText, url);\n//             }\n//         }\n//     }\n\n//     req.setRequestHeader(\"User-Agent\", USER_AGENT);\n//     req.send();\n// }\n\n// export function search(searchText, domainToUse, onSuccess, onFailure) {\n//     // http://high.fi/search.cfm?q=formula&x=0&y=0&outputtype=json-private\n//     var url = \"http://\" + domainToUse + \"/search.cfm?q=\" + searchText + \"&x=0&y=0&outputtype=\" + HIGH_FI_API + \"&APIKEY=\" + API_KEY;\n//     //console.debug(\"highfi.js, search, url=\" + url);\n\n//     var req = new XMLHttpRequest;\n//     req.open(\"GET\", url);\n//     req.onreadystatechange = function() {\n//         if (req.readyState === XMLHttpRequest.DONE) {\n//             if (req.status === 200) {\n//                 //console.debug(req.status +\"; \" + req.responseText);\n//                 var jsonObject = JSON.parse(req.responseText);\n//                 onSuccess(jsonObject);\n//             } else {\n//                 onFailure(req.status, req.statusText, url);\n//             }\n//         }\n//     }\n\n//     req.setRequestHeader(\"User-Agent\", USER_AGENT);\n//     req.send();\n// }\n\n// export function makeHighFiCall(url) {\n//     //console.log(\"makeHighFiCall. url=\" + url);\n\n//     var req = new XMLHttpRequest;\n//     req.open(\"GET\", url);\n//     req.onreadystatechange = function() {\n//         if (req.readyState === XMLHttpRequest.DONE) {\n//             //console.debug(req.status +\"; \" + req.responseText);\n//         }\n//     }\n\n//     req.setRequestHeader(\"User-Agent\", USER_AGENT);\n//     req.send();\n// }\n\n// http://high.fi/api/?act=listLanguages&APIKEY=123456\nexport const listLanguages = async (domainToUse: string) => {\n  const url = `${createApiEndpoint(domainToUse, '/api/?act=listLanguages')}`;\n  //console.debug(\"high.js, listLanguages, url=\" + url);\n\n  const apiRequest = new Request(url, init);\n  fetch(apiRequest)\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      // console.debug(data)\n      // {\n      //     \"responseData\": {\n      //       \"supportedLanguages\": [\n      //           {\n      //               \"language\": \"Finnish\",\n      //               \"country\": \"Finland\",\n      //               \"domainToUse\": \"high.fi\",\n      //               \"languageCode\": \"fi-fi\",\n      //               \"mostPopularName\": \"Suosituimmat\",\n      //               \"latestName\": \"Uusimmat\",\n      //               \"useToRetrieveLists\": \"finnish\",\n      //               \"genericNewsURLPart\": \"uutiset\"\n      //           },\n      //           {\n      //               \"language\": \"English\",\n      //               \"country\": \"United States\",\n      //               \"domainToUse\": \"en.high.fi\",\n      //               \"languageCode\": \"en-us\",\n      //               \"mostPopularName\": \"Most Popular\",\n      //               \"latestName\": \"Latest News\",\n      //               \"useToRetrieveLists\": \"english\",\n      //               \"genericNewsURLPart\": \"news\"\n      //           }\n      //       ]\n      //   }\n      // }\n      const items = data.responseData.supportedLanguages;\n\n      const languages = [];\n      items.forEach((entry) => {\n        const item = {};\n        for (const key in entry) {\n          item[key] = entry[key];\n        }\n        languages.push(item);\n      });\n\n      return languages;\n    })\n    .catch((error: Error) => {\n      console.error(error);\n      throw Error('Fetching languages failed! ' + error.message);\n    });\n};\n\n/**\n  Returns full list of news categories available for the selected language.\n  The API doesn't return the always-present \"Most popular\" and \"Latest news\" lists so we add those manually.\n\n  E.g. url: http://high.fi/api/?act=listCategories&usedLanguage=finnish&APIKEY=1234567\n*/\nexport const listCategories = async (\n  domainToUse: string,\n  mostPopularName: string,\n  genericNewsURLPart: string,\n  latestName: string,\n  useToRetrieveLists: string,\n) => {\n  const categories = [];\n  const popular = {\n    title: mostPopularName,\n    sectionID: 'top',\n    htmlFilename: 'top',\n    selected: true,\n    depth: 1,\n  };\n  categories.push(popular);\n  const latest = {\n    title: latestName,\n    sectionID: genericNewsURLPart,\n    htmlFilename: genericNewsURLPart,\n    selected: true,\n    depth: 1,\n  };\n  categories.push(latest);\n\n  const url = `${createApiEndpoint(domainToUse, `/api/?act=listCategories&usedLanguage=${useToRetrieveLists}&APIKEY=${API_KEY}`)}`;\n  // console.debug(\"api.ts, listLanguages, url=\" + url);\n\n  const apiRequest = new Request(url, init);\n\n  try {\n    const response = await fetch(apiRequest);\n    const data = await response.json();\n\n    const items = data.responseData.categories;\n\n    items.forEach((entry: Category) => {\n      const item = {};\n      for (const key in entry) {\n        item[key] = entry[key];\n      }\n      item['selected'] = false;\n\n      categories.push(item);\n    });\n    return categories;\n  } catch (error) {\n    console.error(error);\n    throw Error('Fetching languages failed! ' + error.message);\n  }\n};\n","import { combineReducers } from 'redux';\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\nexport const toggleTheme = (theme) => ({\n  type: TOGGLE_THEME,\n  payload: theme,\n});\n\nconst INITIAL_STATE = {\n  darkModeEnabled: false,\n};\n\nconst Settings = (state = INITIAL_STATE, action) => {\n  console.debug(action.type);\n  console.debug('payload: ', action.payload);\n\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      switch (action.payload) {\n        case true:\n          return { ...state, darkModeEnabled: true };\n        case false:\n          return { ...state, darkModeEnabled: false };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  Settings,\n});\n","import React from 'react';\nimport { View, StyleSheet, Text, Button } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTheme } from '@react-navigation/native';\n\nimport Switch from 'expo-dark-mode-switch';\n\nimport { toggleTheme } from '../reducers';\n\nconst Header = (props) => {\n  const { colors } = useTheme();\n  const darkModeEnabled = useSelector(\n    (state) => state.Settings.darkModeEnabled,\n  );\n  const dispatch = useDispatch();\n\n  // const { navigation } = props;\n\n  return (\n    <View style={styles.switchContainerStyle}>\n      <View style={styles.titleWrapper}>\n        <Text style={[styles.switchTitleStyle, { color: colors.text }]}>\n          Highlakka\n        </Text>\n      </View>\n      <View style={styles.switchWrapperStyle}>\n        <Switch\n          value={darkModeEnabled}\n          onChange={(value) => {\n            dispatch(toggleTheme(value));\n          }}\n        />\n      </View>\n      {/* <Button title=\"S\" onPress={() => navigation.navigate('Settings')} /> */}\n    </View>\n  );\n}\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  switchContainerStyle: {\n    padding: 0,\n    minHeight: 25,\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  switchTitleStyle: {\n    flex: 0,\n    paddingLeft: 15,\n    paddingRight: 8,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  switchWrapperStyle: {\n    flex: 0,\n    flexDirection: 'row',\n    paddingLeft: 8,\n    paddingRight: 8,\n    justifyContent: 'flex-end',\n  },\n  titleWrapper: { flex: 1, position: 'relative' },\n});\n","import { createContext } from 'react';\n\nconst DEFAULT_CONTEXT = {\n  htmlFilename: 'uutiset',\n  title: 'Uutiset',\n};\n\nexport const CategoryContext = createContext(DEFAULT_CONTEXT);\n","import { DateTime } from 'luxon';\n\nexport const getOrder = (datetime: string): number => {\n  const startDate = DateTime.fromISO(datetime);\n  const diff = DateTime.now()\n    .diff(startDate, ['years', 'months', 'days', 'hours', 'minutes'])\n    .toObject();\n  const days = diff.days;\n  const hours = diff.hours;\n  const minutes = diff.minutes;\n\n  if (days == 0) {\n    if (hours == 0) {\n      if (minutes < 0) {\n        return 0;\n      } else if (minutes < 5) {\n        return 5;\n      } else if (minutes < 15) {\n        return 15;\n      } else if (minutes < 30) {\n        return 30;\n      } else if (minutes < 45) {\n        return 45;\n      } else if (minutes < 60) {\n        return 60;\n      }\n    } else {\n      if (hours == 1) {\n        return 60 * (hours + 1);\n      } else {\n        return 60 * hours;\n      }\n    }\n  } else {\n    if (days == 1) {\n      return 1440;\n    } else {\n      return 1440 * days;\n    }\n  }\n\n  return 99999;\n};\n\n/*\n * Calculates time difference to current time for given time.\n * \"publishedDateJS\": \"2015-03-27T09:58:13.000Z\",\n */\nexport const timeSince = (datetime: string): string => {\n  const newsTime = DateTime.fromISO(datetime);\n  let diff = newsTime.diffNow(['days', 'hours', 'minutes']).toObject(); // milliseconds\n\n  const days = Math.abs(diff.days);\n  const hours = Math.abs(diff.hours);\n  const minutes = Math.abs(diff.minutes);\n\n  if (days == 0) {\n    if (hours == 0) {\n      if (minutes < 0) return 'Just now';\n      else if (minutes < 5) return '< 5 minutes';\n      else if (minutes < 15) return '< 15 minutes';\n      else if (minutes < 30) return '< 30 minutes';\n      else if (minutes < 45) return '< 45 minutes';\n      else if (minutes < 60) return '< 60 minutes';\n    } else {\n      if (hours == 1) {\n        return `< ${hours + 1} hours`;\n      } else {\n        return `< ${hours} hours`;\n      }\n    }\n  } else {\n    if (days === 1) {\n      return `Yesterday`;\n    } else {\n      return `${days} days`;\n    }\n  }\n};\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nconst SectionHeader = ({ section, colors }) => {\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      <Text style={[styles.title, { color: colors.text }]}>{section}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    // flexDirection: 'column',\n    // alignItems: 'flex-start',\n    // justifyContent: 'flex-start',\n    alignSelf: 'stretch',\n    paddingVertical: 5,\n  },\n  title: {\n    fontSize: 15,\n  },\n});\n\nexport default SectionHeader;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  ActivityIndicator,\n  TouchableOpacity,\n} from 'react-native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useTheme } from '@react-navigation/native';\nimport { DateTime } from 'luxon';\nimport { createApiEndpoint } from '../controllers/api';\nimport { CategoryContext } from '../context/CategoryContext';\n\nimport { timeSince, getOrder } from '../components/utils';\nimport SectionHeader from '../components/SectionHeader';\n\nimport { Entry } from '../models/Entry';\n\nconst init: RequestInit = {\n  method: 'GET',\n  headers: {\n    Accept: 'application/json',\n    'User-Agent': 'Highlakka',\n  },\n};\n\ninterface Props {\n  isLoading: boolean;\n  isError: boolean;\n}\n\nexport interface ISections {\n  section: [Entry];\n}\n\nexport default function Homescreen({ route, navigation }) {\n  const { htmlFilename } = useContext(CategoryContext);\n  const [sections, setSections] = useState<ISections[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const { colors } = useTheme();\n\n  // 'https://fi.high.fi/uutiset/json-private?APIKEY=1234567890';\n  useEffect(() => {\n    const apiRequest = new Request(\n      createApiEndpoint(\n        'fi.high.fi',\n        `${htmlFilename}/json-private?APIKEY=123`,\n      ),\n      init,\n    );\n    fetch(apiRequest)\n      .then(async (response) => {\n        return response.json();\n      })\n      .then((data): [Entry] => {\n        // console.log(data)\n        const items = data.responseData.feed.entries;\n        return items;\n      })\n      .then(async (items) => {\n        setSections([]);\n\n        // Top items are not grouped by time but by ranking\n        if (htmlFilename == 'top') {\n          let i = 0;\n          let range = ' 1 ..10';\n          items.forEach((entry: Entry) => {\n            if (i < 10) {\n              range = ' 1 ..10';\n            } else if (i < 20) {\n              range = ' 11 ..20';\n            } else if (i < 30) {\n              range = ' 21 ..30';\n            } else if (i < 40) {\n              range = ' 31 ..40';\n            } else if (i < 50) {\n              range = ' 41 ..50';\n            } else if (i < 60) {\n              range = ' 51 ..60';\n            } else if (i < 70) {\n              range = ' 61 ..70';\n            } else {\n              range = ' 70 ...';\n            }\n\n            if (!sections[range]) {\n              sections[range] = [entry];\n            } else {\n              sections[range].push(entry);\n            }\n            i += 1;\n          });\n\n          setSections(sections);\n          setLoading(false);\n          setError(false);\n        } else {\n          const newsEntries = [] as Entry[];\n\n          items.map((item, index) => {\n            const article = {\n              ...item,\n              timeSince: timeSince(item.publishedDateJS),\n              orderNo: getOrder(item.publishedDateJS),\n              publishedDate: DateTime.fromISO(item.publishedDateJS)\n                .toLocal()\n                .toFormat('ccc d.m.yyyy HH:mm'),\n            };\n\n            newsEntries.push(article);\n          });\n\n          // Other categories are grouped by time\n          newsEntries.sort((a, b) => a.orderNo - b.orderNo);\n\n          newsEntries.forEach((entry) => {\n            // Put each item in a section\n            // If we don't have section for particular time, create new one,\n            // Otherwise just add item to existing section\n            if (!sections[entry.timeSince]) {\n              sections[entry.timeSince] = [entry];\n            } else {\n              sections[entry.timeSince].push(entry);\n            }\n          });\n\n          setSections(sections);\n          setLoading(false);\n          setError(false);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n        setError(true);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  // const renderItems = ({artileID, title, shortDescription}) => {\n  //   return (\n  //     <View key={artileID}>\n  //         <Text>\n  //           {title}\n  //         </Text>\n  //         <Text>\n  //           {shortDescription}\n  //         </Text>\n  //     </View>\n  //   )\n  // }\n\n  const Results = (props: Props) => {\n    if (props.isLoading) {\n      return <ActivityIndicator animating={true} />;\n    }\n\n    if (props.isError) {\n      return <Text>Failed to load news!</Text>;\n    }\n\n    return (\n      <ScrollView\n        style={[styles.container, { backgroundColor: colors.card }]}\n        contentContainerStyle={[styles.contentContainer]}\n      >\n        {Object.keys(sections).map((section, index) => {\n          return (\n            <View key={index} style={styles.articleContainer}>\n              <SectionHeader section={section} colors={colors} />\n              {sections[section].map((article: Entry, index) => {\n                // console.log({ article });\n                return (\n                  <TouchableOpacity\n                    key={index}\n                    onPress={() => WebBrowser.openBrowserAsync(article.link)}\n                    style={styles.entryContainer}\n                  >\n                    <Image\n                      source={{ uri: article.picture }}\n                      style={[styles.entryImage]}\n                    />\n                    <View style={styles.entryContent}>\n                      <Text style={[styles.title, { color: colors.text }]}>\n                        {article.title}\n                      </Text>\n                      <Text style={[styles.source, { color: colors.text }]}>\n                        {article.author} - {article.publishedDate}\n                      </Text>\n                      <Text\n                        style={[styles.description, { color: colors.text }]}\n                      >\n                        {article.shortDescription}\n                      </Text>\n                    </View>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          );\n        })}\n      </ScrollView>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Results isLoading={loading} isError={error} />\n\n      <View style={[styles.footerContainer, { backgroundColor: colors.card }]}>\n        <TouchableOpacity onPress={handlePoweredPress}>\n          <Text style={styles.footerInfoText}>\n            Powered by <Text style={styles.linkText}>high.fi</Text>\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nfunction handlePoweredPress() {\n  WebBrowser.openBrowserAsync('https://high.fi');\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    alignItems: 'baseline',\n  },\n  articleContainer: {\n    flex: 1,\n    alignItems: 'baseline',\n  },\n  footerContainer: {\n    position: 'absolute',\n    bottom: 5,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    // backgroundColor: '#fbfbfb',\n  },\n  footerInfoText: {\n    fontSize: 10,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  entryContainer: {\n    paddingVertical: 5,\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    paddingTop: 10,\n  },\n  entryImage: {\n    alignItems: 'flex-start',\n    width: 100,\n    height: 100,\n  },\n  entryContent: {\n    flex: 1,\n    flexDirection: 'column',\n    paddingHorizontal: 10,\n    // borderColor: 'red',\n    // borderWidth: 1,\n  },\n  title: {\n    fontSize: 15,\n    minWidth: 0,\n  },\n  source: {\n    fontSize: 12,\n  },\n  description: {\n    minWidth: 0,\n    fontSize: 14,\n    marginTop: 3,\n  },\n  linkText: {\n    fontSize: 9,\n    color: '#2e78b7',\n  },\n});\n","import React, { Component } from 'react';\nimport { StyleSheet, Switch, Text, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst style = StyleSheet.create({\n  defaultContainerStyle: {\n    padding: 0,\n    minHeight: 50,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  defaultTitleStyle: {\n    flex: 0,\n    paddingLeft: 16,\n    paddingRight: 8,\n    fontSize: 16,\n  },\n  defaultDescriptionStyle: {\n    flex: 0,\n    paddingLeft: 16,\n    paddingRight: 8,\n    fontSize: 12,\n  },\n  defaultSwitchWrapperStyle: {\n    flex: 0,\n    flexDirection: 'row',\n    paddingLeft: 8,\n    marginRight: 64,\n  },\n  defaultDisabledOverlayStyle: {\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  titleWrapper: { flex: 1, position: 'relative' },\n});\n\nclass SettingsSwitch extends Component {\n  static propTypes = {\n    containerProps: PropTypes.object,\n    containerStyle: PropTypes.object,\n    disabledOverlayStyle: PropTypes.object,\n    titleProps: PropTypes.object,\n    titleStyle: PropTypes.object,\n    title: PropTypes.string.isRequired,\n    descriptionProps: PropTypes.object,\n    descriptionStyle: PropTypes.object,\n    description: PropTypes.string,\n    switchWrapperProps: PropTypes.object,\n    switchWrapperStyle: PropTypes.object,\n    value: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    onValueChange: PropTypes.func.isRequired,\n    trackColor: PropTypes.shape({\n      true: PropTypes.string,\n      false: PropTypes.string,\n    }),\n    switchProps: PropTypes.object,\n  };\n\n  static defaultProps = {\n    containerProps: {},\n    containerStyle: {},\n    disabledOverlayStyle: {},\n    titleProps: {},\n    titleStyle: {},\n    descriptionProps: {},\n    descriptionStyle: {},\n    description: null,\n    switchWrapperProps: {},\n    switchWrapperStyle: {},\n    disabled: false,\n    switchProps: {},\n    trackColor: null,\n  };\n\n  render() {\n    const {\n      containerProps,\n      containerStyle,\n      titleProps,\n      titleStyle,\n      title,\n      disabled,\n      switchProps,\n      disabledOverlayStyle,\n      switchWrapperProps,\n      switchWrapperStyle,\n      value,\n      trackColor,\n      onValueChange,\n      descriptionProps,\n      descriptionStyle,\n      description,\n    } = this.props;\n\n    return (\n      <View\n        {...containerProps}\n        style={[style.defaultContainerStyle, containerStyle]}\n      >\n        <View style={style.titleWrapper}>\n          <Text {...titleProps} style={[style.defaultTitleStyle, titleStyle]}>\n            {title}\n          </Text>\n          {description ? (\n            <Text\n              {...descriptionProps}\n              style={[style.defaultDescriptionStyle, descriptionStyle]}\n            >\n              {description}\n            </Text>\n          ) : null}\n          {disabled ? (\n            <View\n              style={[\n                style.defaultDisabledOverlayStyle,\n                disabled ? disabledOverlayStyle : null,\n              ]}\n            />\n          ) : null}\n        </View>\n        <View\n          {...switchWrapperProps}\n          style={[style.defaultSwitchWrapperStyle, switchWrapperStyle]}\n        >\n          <Switch\n            value={value}\n            trackColor={trackColor}\n            onValueChange={onValueChange}\n            disabled={disabled}\n            {...switchProps}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default SettingsSwitch;\n","import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport SettingsSwitch from '../components/Switch';\nimport { useTheme } from '@react-navigation/native';\n\nexport default function SettingsScreen({ route, navigation }) {\n  const [isMobileModeEnabled, setIsMobileModeEnabled] = useState(false);\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView\n      style={[styles.container, { backgroundColor: colors.card }]}\n      contentContainerStyle={[styles.contentContainer]}\n    >\n      <View key=\"application\">\n        <Text style={[styles.titleStyle, { color: colors.text }]}>\n          Information\n        </Text>\n        <View>\n          <OptionButton\n            icon=\"md-compass\"\n            label=\"Highlakka on GitHub\"\n            onPress={() =>\n              WebBrowser.openBrowserAsync(\n                'https://github.com/walokra/highlakka',\n              )\n            }\n            isLastOption\n          />\n        </View>\n      </View>\n\n      <View>\n        <Text style={[styles.titleStyle, { color: colors.text }]}>General</Text>\n        <SettingsSwitch\n          title={'Use mobile mode'}\n          containerStyle={{ backgroundColor: colors.card }}\n          titleStyle={{ color: colors.text }}\n          onValueChange={(value) => {\n            console.log('use mobile mode:', value);\n            setIsMobileModeEnabled(value);\n          }}\n          value={isMobileModeEnabled}\n        />\n      </View>\n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  const { colors } = useTheme();\n\n  return (\n    <RectButton\n      style={[\n        styles.option,\n        isLastOption && styles.lastOption,\n        { backgroundColor: colors.card },\n      ]}\n      onPress={onPress}\n    >\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View>\n          <Text style={[styles.optionText, { color: colors.text }]}>\n            {label}\n          </Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n    minHeight: 50,\n    flexDirection: 'row',\n  },\n  contentContainer: {\n    paddingTop: 15,\n    flex: 1,\n    minHeight: 50,\n    // alignItems: 'center',\n  },\n  optionIconContainer: {\n    marginRight: 12,\n    marginLeft: 12,\n  },\n  titleStyle: {\n    flex: 0,\n    paddingLeft: 16,\n    paddingRight: 8,\n    fontSize: 16,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 5,\n    paddingVertical: 5,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {},\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst middleware = [thunkMiddleware];\n\nconst middlewareEnhancer = applyMiddleware(...middleware);\n\nconst enhancers = [middlewareEnhancer];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(...enhancers);\n\nexport default createStore(reducer, {}, composedEnhancers);\n","import React, { useState, useEffect } from 'react';\nimport { Provider, useSelector } from 'react-redux';\nimport {\n  StatusBar,\n  StyleSheet,\n  View,\n  Text,\n  ActivityIndicator,\n  Dimensions,\n} from 'react-native';\nimport { SafeAreaView, SafeAreaProvider } from 'react-native-safe-area-context';\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n} from '@react-navigation/drawer';\nimport { AppearanceProvider, useColorScheme } from 'react-native-appearance';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport { listCategories } from './controllers/api';\n\nimport Header from './components/Header';\n\nimport HomeScreen from './screens/HomeScreen';\nimport SettingsScreen from './screens/SettingsScreen';\n\nimport store from './store';\n\nimport { CategoryContext } from './context/CategoryContext';\n\nimport { Category } from './models/Category';\n\nconst CustomDrawerContent = (props) => {\n  return (\n    <DrawerContentScrollView {...props}>\n      <Header {...props} />\n\n      <DrawerItemList {...props} />\n    </DrawerContentScrollView>\n  );\n};\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\n\nconst Root = (props) => {\n  const { title, htmlFilename } = props.item;\n\n  return (\n    <CategoryContext.Provider value={{ htmlFilename, title }}>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Highlakka\"\n          component={HomeScreen}\n          options={{\n            title: `Highlakka: ${title}`,\n          }}\n        />\n        <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n      </Stack.Navigator>\n    </CategoryContext.Provider>\n  );\n};\n\nfunction EmptyScreen() {\n  return (\n    <View\n      style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}\n    ></View>\n  );\n}\n\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  const dimensions = Dimensions.get('window');\n  const isLargeScreen = dimensions.width >= 768;\n\n  const darkModeEnabled = useSelector(\n    (state) => state.Settings.darkModeEnabled,\n  );\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const themeStatusBarStyle =\n    colorScheme == 'light' && !darkModeEnabled\n      ? 'light-content'\n      : 'dark-content';\n\n  useEffect(() => {\n    // const languages = listLanguages(\"high.fi\")\n    const domainToUse = 'fi.high.fi';\n    listCategories(\n      domainToUse,\n      'Suosituimmat',\n      'uutiset',\n      'Uusimmat',\n      'finnish',\n    )\n      .then((categories) => {\n        setCategories(categories);\n        setLoading(false);\n        setError(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n        setError(true);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    if (loading) {\n      return (\n        <SafeAreaProvider>\n          <SafeAreaView style={[styles.container]}>\n            <ActivityIndicator animating={true} />\n          </SafeAreaView>\n        </SafeAreaProvider>\n      );\n    }\n\n    if (error) {\n      return (\n        <SafeAreaProvider>\n          <SafeAreaView style={[styles.container]}>\n            <Text>Failed to load news!</Text>\n          </SafeAreaView>\n        </SafeAreaProvider>\n      );\n    }\n\n    return (\n      <SafeAreaProvider>\n        <NavigationContainer\n          theme={\n            colorScheme === 'light' && !darkModeEnabled\n              ? DefaultTheme\n              : DarkTheme\n          }\n        >\n          <View style={[styles.container]}>\n            <StatusBar barStyle={themeStatusBarStyle} />\n\n            <Drawer.Navigator\n              drawerType={isLargeScreen ? 'permanent' : 'back'}\n              drawerStyle={isLargeScreen ? null : { width: '100%' }}\n              overlayColor=\"transparent\"\n              drawerContent={CustomDrawerContent}\n              initialRouteName=\"Root\"\n            >\n              {categories && categories.length > 0 ? (\n                categories.map((item: Category, index) => (\n                  <Drawer.Screen\n                    key={item.sectionID}\n                    name={item.title + '_' + item.sectionID}\n                    children={() => <Root item={item} />}\n                    options={{ drawerLabel: item.title }}\n                  />\n                ))\n              ) : (\n                <Drawer.Screen name=\"empty\" component={EmptyScreen} />\n              )}\n            </Drawer.Navigator>\n          </View>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    );\n  }\n}\n\nexport default function AppContainer() {\n  return (\n    <AppearanceProvider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </AppearanceProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  header: {\n    height: 50,\n  },\n});\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}