{"version":3,"sources":["assets/fonts/SpaceMono-Regular.ttf","context/ThemeProvider.tsx","components/Header.tsx","context/CategoryContext.tsx","controllers/api.ts","components/SectionHeader.tsx","components/utils.ts","screens/HomeScreen.tsx","components/Switch.tsx","screens/SettingsScreen.tsx","components/NativeWebview.tsx","screens/WebViewScreen.tsx","App.tsx","hooks/useCachedResources.js","index.js"],"names":["module","exports","themeContextDefaultValue","setState","state","colorScheme","ThemeContext","React","createContext","ThemeProvider","children","useState","Provider","value","Header","props","colors","useTheme","theme","useContext","View","style","styles","switchContainerStyle","titleWrapper","Text","switchTitleStyle","color","text","switchWrapperStyle","testID","onChange","StyleSheet","create","alignItems","flexDirection","minHeight","padding","flex","fontSize","fontWeight","paddingLeft","paddingRight","justifyContent","position","CategoryContext","htmlFilename","title","createApiEndpoint","domainToUse","endpoint","proxy","init","headers","Accept","method","listCategories","mostPopularName","genericNewsURLPart","latestName","useToRetrieveLists","categories","popular","depth","sectionID","selected","push","latest","url","apiRequest","Request","response","fetch","json","responseData","forEach","entry","item","key","error","console","Error","message","container","alignSelf","paddingVertical","SectionHeader","section","backgroundColor","background","getOrder","datetime","startDate","DateTime","fromISO","diff","now","toObject","days","hours","minutes","timeSince","diffNow","Math","abs","articleContainer","contentContainer","description","marginTop","minWidth","entryContainer","paddingHorizontal","paddingTop","entryContent","entryImage","height","width","footerContainer","bottom","left","right","Platform","select","android","elevation","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","footerInfoText","textAlign","linkText","source","Homescreen","navigation","sections","setSections","loading","setLoading","setError","useEffect","then","data","feed","entries","items","i","range","newsEntries","map","article","orderNo","publishedDateJS","publishedDate","toLocal","toFormat","sort","a","b","catch","e","finally","isLoading","ActivityIndicator","animating","isError","contentContainerStyle","card","Object","keys","index","TouchableOpacity","onPress","navigate","link","WebBrowser","Image","uri","picture","author","shortDescription","defaultContainerStyle","defaultDescriptionStyle","defaultDisabledOverlayStyle","top","defaultSwitchWrapperStyle","marginRight","defaultTitleStyle","SettingsSwitch","containerStyle","descriptionStyle","disabled","onValueChange","titleStyle","trackColor","Switch","SettingsScreen","isMobileModeEnabled","setIsMobileModeEnabled","icon","isLastOption","label","log","OptionButton","option","lastOption","optionIconContainer","Ionicons","name","size","optionText","borderBottomWidth","borderColor","marginLeft","iFrameStyles","overflow","NativeWebView","target","OS","src","scalesPageToFit","startInLoadingState","WebViewScreen","route","params","CustomDrawerContent","DrawerContentScrollView","DrawerItemList","Drawer","createDrawerNavigator","Stack","createStackNavigator","DrawerIcon","toggleDrawer","Root","Navigator","Screen","component","HomeScreen","options","headerShown","EmptyScreen","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","require","warn","loadResourcesAndDataAsync","useCachedResources","darkModeEnabled","useColorScheme","setCategories","themeStatusBarStyle","cat","fetchCategories","NavigationContainer","DarkTheme","DefaultTheme","StatusBar","drawerContent","initialRouteName","screenOptions","headerLeft","length","drawerLabel","headerTitle","header","registerRootComponent"],"mappings":"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","file":"static/js/app.254666f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React from 'react';\n\nexport interface Theme {\n  colorScheme: 'dark' | 'light';\n}\n\ntype ThemeContextState = { colorScheme: string };\n\nconst themeContextDefaultValue = {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  setState: (state: ThemeContextState) => {},\n  state: { colorScheme: 'dark' },\n};\n\nexport const ThemeContext = React.createContext(themeContextDefaultValue);\n\nconst ThemeProvider: React.FunctionComponent<{ children: React.ReactElement }> = ({ children }) => {\n  const [state, setState] = React.useState(themeContextDefaultValue.state);\n\n  return <ThemeContext.Provider value={{ setState, state }}>{children}</ThemeContext.Provider>;\n};\n\nexport default ThemeProvider;\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable react/forbid-component-props */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// import { useDispatch, useSelector } from 'react-redux';\nimport { useTheme } from '@react-navigation/native';\nimport Switch from 'expo-dark-mode-switch';\nimport React, { useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { ThemeContext } from '../context/ThemeProvider';\n\n// import { toggleTheme } from '../reducers';\n\nconst Header = (props): JSX.Element => {\n  const { colors } = useTheme();\n  const theme = useContext(ThemeContext);\n\n  // const { navigation } = props;\n\n  return (\n    <View style={styles.switchContainerStyle}>\n      <View style={styles.titleWrapper}>\n        <Text style={[styles.switchTitleStyle, { color: colors.text }]}>Highlakka</Text>\n      </View>\n      <View style={styles.switchWrapperStyle} testID=\"theme-switch-container-view\">\n        <Switch\n          onChange={(value) => {\n            theme.setState(value === true ? { colorScheme: 'dark' } : { colorScheme: 'light' });\n          }}\n          testID=\"theme-switch\"\n          value={theme.state.colorScheme === 'dark'}\n        />\n      </View>\n      {/* <Button title=\"S\" onPress={() => navigation.navigate('Settings')} /> */}\n    </View>\n  );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n  switchContainerStyle: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minHeight: 25,\n    padding: 0,\n  },\n  switchTitleStyle: {\n    flex: 0,\n    fontSize: 16,\n    fontWeight: 'bold',\n    paddingLeft: 15,\n    paddingRight: 8,\n  },\n  switchWrapperStyle: {\n    flex: 0,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n  titleWrapper: { flex: 1, position: 'relative' },\n});\n","/* eslint-disable import/prefer-default-export */\nimport { createContext } from 'react';\n\nconst DEFAULT_CONTEXT = {\n  htmlFilename: 'uutiset',\n  title: 'Uutiset',\n};\n\nexport const CategoryContext = createContext(DEFAULT_CONTEXT);\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n \n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n// import { Platform } from 'react-native';\n\n// import { Language } from '../models/Language';\nimport { Category } from '../models/Category';\n\nconst HIGH_FI_API = 'json-private';\nconst API_KEY = '1234567890';\n// const USER_AGENT = 'Highlakka, (0.0.1)-(1) (RN)';\n// const domainToUse = 'high.fi';\n\n// http://en.high.fi/api/help\n\n// const domainToUse =\n//   Platform.OS === 'web'\n//     ? 'cors-anywhere.herokuapp.com/https://high.fi/'\n//     : 'high.fi';\n\n// const apiEndpoint =\n//   Platform.OS === 'web'\n//     ? 'https://cors-anywhere.herokuapp.com/https://fi.high.fi/uutiset/json-private?APIKEY=1234567890'\n//     : 'https://fi.high.fi/uutiset/json-private?APIKEY=1234567890';\n\n// const proxy = Platform.OS === 'web' ? 'http://0.0.0.0:8080/' : '';\nconst proxy = '';\n\nexport const createApiEndpoint = (domainToUse: string, endpoint: string): string =>\n  `${proxy}https://${domainToUse}/${endpoint}/${HIGH_FI_API}?APIKEY=${API_KEY}`;\n\nexport const init: RequestInit = {\n  headers: {\n    Accept: 'application/json',\n    // FIXME: Can't send User-Agent to high.fi API due CORS\n    // 'User-Agent': USER_AGENT,\n  },\n  method: 'GET',\n};\n\n// export function load(source: Object, domainToUse: string, hideSections: [], onSuccess, onFailure) {\n//     var url = \"http://\" + domainToUse + \"/\" + source.htmlFilename + \"/\" + HIGH_FI_API + \"?APIKEY=\" + API_KEY;\n//     if (hideSections && hideSections.length > 0) {\n//         url +=\"&jsonHideSections=\" + hideSections.join();\n//     }\n//     console.debug(\"highfi.js, load(source=\"  + JSON.stringify(source) + \"), hideSections=\" + hideSections + \", url=\" + url);\n\n//     var req = new XMLHttpRequest;\n//     req.open(\"GET\", url);\n//     req.onreadystatechange = function() {\n//         if (req.readyState === XMLHttpRequest.DONE) {\n//             if (req.status == 200 ) {\n//                 //console.debug(\"200: \" + req.responseText);\n//                 var jsonObject = JSON.parse(req.responseText);\n//                 onSuccess(jsonObject);\n//             } else {\n//                 onFailure(req.status, req.responseText, url);\n//             }\n//         }\n//     }\n\n//     req.setRequestHeader(\"User-Agent\", USER_AGENT);\n//     req.send();\n// }\n\n// export function search(searchText, domainToUse, onSuccess, onFailure) {\n//     // http://high.fi/search.cfm?q=formula&x=0&y=0&outputtype=json-private\n//     var url = \"http://\" + domainToUse + \"/search.cfm?q=\" + searchText + \"&x=0&y=0&outputtype=\" + HIGH_FI_API + \"&APIKEY=\" + API_KEY;\n//     //console.debug(\"highfi.js, search, url=\" + url);\n\n//     var req = new XMLHttpRequest;\n//     req.open(\"GET\", url);\n//     req.onreadystatechange = function() {\n//         if (req.readyState === XMLHttpRequest.DONE) {\n//             if (req.status === 200) {\n//                 //console.debug(req.status +\"; \" + req.responseText);\n//                 var jsonObject = JSON.parse(req.responseText);\n//                 onSuccess(jsonObject);\n//             } else {\n//                 onFailure(req.status, req.statusText, url);\n//             }\n//         }\n//     }\n\n//     req.setRequestHeader(\"User-Agent\", USER_AGENT);\n//     req.send();\n// }\n\n// export function makeHighFiCall(url) {\n//     //console.log(\"makeHighFiCall. url=\" + url);\n\n//     var req = new XMLHttpRequest;\n//     req.open(\"GET\", url);\n//     req.onreadystatechange = function() {\n//         if (req.readyState === XMLHttpRequest.DONE) {\n//             //console.debug(req.status +\"; \" + req.responseText);\n//         }\n//     }\n\n//     req.setRequestHeader(\"User-Agent\", USER_AGENT);\n//     req.send();\n// }\n\n// http://high.fi/api/?act=listLanguages&APIKEY=123456\n// export const listLanguages = async (domainToUse: string) => {\n//   const url = `${createApiEndpoint(domainToUse, '/api/?act=listLanguages')}`;\n//   // console.debug(\"high.js, listLanguages, url=\" + url);\n\n//   const apiRequest = new Request(url, init);\n//   fetch(apiRequest)\n//     .then((response) => {\n//       return response.json();\n//     })\n//     .then((data) => {\n//       // console.debug(data)\n//       // {\n//       //     \"responseData\": {\n//       //       \"supportedLanguages\": [\n//       //           {\n//       //               \"language\": \"Finnish\",\n//       //               \"country\": \"Finland\",\n//       //               \"domainToUse\": \"high.fi\",\n//       //               \"languageCode\": \"fi-fi\",\n//       //               \"mostPopularName\": \"Suosituimmat\",\n//       //               \"latestName\": \"Uusimmat\",\n//       //               \"useToRetrieveLists\": \"finnish\",\n//       //               \"genericNewsURLPart\": \"uutiset\"\n//       //           },\n//       //           {\n//       //               \"language\": \"English\",\n//       //               \"country\": \"United States\",\n//       //               \"domainToUse\": \"en.high.fi\",\n//       //               \"languageCode\": \"en-us\",\n//       //               \"mostPopularName\": \"Most Popular\",\n//       //               \"latestName\": \"Latest News\",\n//       //               \"useToRetrieveLists\": \"english\",\n//       //               \"genericNewsURLPart\": \"news\"\n//       //           }\n//       //       ]\n//       //   }\n//       // }\n//       const items = data.responseData.supportedLanguages;\n\n//       const languages = [];\n//       items.forEach((entry) => {\n//         const item = {};\n//         for (const key in entry) {\n//           item[key] = entry[key];\n//         }\n//         languages.push(item);\n//       });\n\n//       return languages;\n//     })\n//     .catch((error: Error) => {\n//       console.error(error);\n//       throw Error('Fetching languages failed! ' + error.message);\n//     });\n// };\n\n/**\n  Returns full list of news categories available for the selected language.\n  The API doesn't return the always-present \"Most popular\" and \"Latest news\" lists so we add those manually.\n\n  E.g. url: http://high.fi/api/?act=listCategories&usedLanguage=finnish&APIKEY=1234567\n*/\nexport const listCategories = async (\n  domainToUse: string,\n  mostPopularName: string,\n  genericNewsURLPart: string,\n  latestName: string,\n  useToRetrieveLists: string,\n): Promise<Category[]> => {\n  const categories = [];\n  const popular = {\n    depth: 1,\n    htmlFilename: 'top',\n    sectionID: 'top',\n    selected: true,\n    title: mostPopularName,\n  };\n\n  categories.push(popular);\n\n  const latest = {\n    depth: 1,\n    htmlFilename: genericNewsURLPart,\n    sectionID: genericNewsURLPart,\n    selected: true,\n    title: latestName,\n  };\n\n  categories.push(latest);\n\n  const url = `${createApiEndpoint(\n    domainToUse,\n    `api/?act=listCategories&usedLanguage=${useToRetrieveLists}&APIKEY=${API_KEY}`,\n  )}`;\n  // console.debug(\"api.ts, listLanguages, url=\" + url);\n\n  const apiRequest = new Request(url, init);\n\n  try {\n    const response = await fetch(apiRequest);\n    const data = await response.json();\n\n    const items = data.responseData.categories;\n\n    // FIXME\n    items.forEach((entry: Category) => {\n      const item = {};\n\n      for (const key in entry) {\n        item[key] = entry[key];\n      }\n\n      item.selected = false;\n\n      categories.push(item);\n    });\n\n    return categories;\n  } catch (error) {\n    console.error(error);\n    throw Error(`Fetching languages failed! ${(error as any).message}`);\n  }\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable react/forbid-component-props */\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nconst SectionHeader = ({ colors, section }) => (\n  <View style={[styles.container, { backgroundColor: colors.background }]}>\n    <Text style={[styles.title, { color: colors.text }]}>{section}</Text>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    // flexDirection: 'column',\n    // alignItems: 'flex-start',\n    // justifyContent: 'flex-start',\n    alignSelf: 'stretch',\n    paddingVertical: 5,\n  },\n  title: {\n    fontSize: 15,\n  },\n});\n\nexport default SectionHeader;\n","import { DateTime } from 'luxon';\n\nexport const getOrder = (datetime: string): number => {\n  const startDate = DateTime.fromISO(datetime);\n  const diff = DateTime.now().diff(startDate, ['years', 'months', 'days', 'hours', 'minutes']).toObject();\n  const { days } = diff;\n  const { hours } = diff;\n  const { minutes } = diff;\n\n  if (days === 0) {\n    if (hours === 0) {\n      if (minutes < 0) {\n        return 0;\n      }\n      if (minutes < 5) {\n        return 5;\n      }\n      if (minutes < 15) {\n        return 15;\n      }\n      if (minutes < 30) {\n        return 30;\n      }\n      if (minutes < 45) {\n        return 45;\n      }\n      if (minutes < 60) {\n        return 60;\n      }\n    } else {\n      if (hours === 1) {\n        return 60 * (hours + 1);\n      }\n\n      return 60 * hours;\n    }\n  } else {\n    if (days === 1) {\n      return 1440;\n    }\n\n    return 1440 * days;\n  }\n\n  return 99999;\n};\n\n/*\n * Calculates time difference to current time for given time.\n * \"publishedDateJS\": \"2015-03-27T09:58:13.000Z\",\n */\nexport const timeSince = (datetime: string): string => {\n  const newsTime = DateTime.fromISO(datetime);\n  const diff = newsTime.diffNow(['days', 'hours', 'minutes']).toObject(); // milliseconds\n\n  const days = Math.abs(diff.days);\n  const hours = Math.abs(diff.hours);\n  const minutes = Math.abs(diff.minutes);\n\n  if (days === 0) {\n    if (hours === 0) {\n      if (minutes < 0) return 'Just now';\n      if (minutes < 5) return '< 5 minutes';\n      if (minutes < 15) return '< 15 minutes';\n      if (minutes < 30) return '< 30 minutes';\n      if (minutes < 45) return '< 45 minutes';\n      if (minutes < 60) return '< 60 minutes';\n    } else {\n      if (hours === 1) {\n        return `< ${hours + 1} hours`;\n      }\n\n      return `< ${hours} hours`;\n    }\n  } else {\n    if (days === 1) {\n      return `Yesterday`;\n    }\n\n    return `${days} days`;\n  }\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable no-shadow */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-no-bind */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-unstable-nested-components */\nimport { useTheme } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { DateTime } from 'luxon';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { ActivityIndicator, Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport SectionHeader from '../components/SectionHeader';\nimport { getOrder, timeSince } from '../components/utils';\nimport { CategoryContext } from '../context/CategoryContext';\nimport { createApiEndpoint, init } from '../controllers/api';\nimport { Entry } from '../models/Entry';\n\nconst styles = StyleSheet.create({\n  articleContainer: {\n    alignItems: 'baseline',\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    alignItems: 'baseline',\n  },\n  description: {\n    fontSize: 14,\n    marginTop: 3,\n    minWidth: 0,\n  },\n  entryContainer: {\n    alignItems: 'center',\n    flex: 1,\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    paddingTop: 10,\n    paddingVertical: 5,\n  },\n  entryContent: {\n    flex: 1,\n    flexDirection: 'column',\n    paddingHorizontal: 10,\n    // borderColor: 'red',\n    // borderWidth: 1,\n  },\n  entryImage: {\n    alignItems: 'flex-start',\n    height: 100,\n    width: 100,\n  },\n  footerContainer: {\n    bottom: 5,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    ...Platform.select({\n      android: {\n        elevation: 20,\n      },\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { height: -3, width: 0 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n    }),\n    alignItems: 'center',\n    // backgroundColor: '#fbfbfb',\n  },\n  footerInfoText: {\n    color: 'rgba(96,100,109, 1)',\n    fontSize: 10,\n    textAlign: 'center',\n  },\n  linkText: {\n    color: '#2e78b7',\n    fontSize: 9,\n  },\n  source: {\n    fontSize: 12,\n  },\n  title: {\n    fontSize: 15,\n    minWidth: 0,\n  },\n});\n\ninterface Props {\n  isError: boolean;\n  isLoading: boolean;\n}\n\ninterface ISections {\n  section: [Entry];\n}\n\nconst Homescreen = ({ navigation }) => {\n  const { htmlFilename } = useContext(CategoryContext);\n  const [sections, setSections] = useState<ISections[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const { colors } = useTheme();\n\n  // 'https://fi.high.fi/uutiset/json-private?APIKEY=1234567890';\n  useEffect(() => {\n    const apiRequest = new Request(createApiEndpoint('fi.high.fi', `${htmlFilename}`), init);\n\n    fetch(apiRequest)\n      .then(async (response) => response.json())\n      .then((data): [Entry] => {\n        // console.log(data)\n        const items = data.responseData.feed.entries;\n\n        return items;\n      })\n      .then((items) => {\n        setSections([]);\n\n        // Top items are not grouped by time but by ranking\n        if (htmlFilename === 'top') {\n          let i = 0;\n          let range = ' 1 ..10';\n\n          items.forEach((entry: Entry) => {\n            if (i < 10) {\n              range = ' 1 ..10';\n            } else if (i < 20) {\n              range = ' 11 ..20';\n            } else if (i < 30) {\n              range = ' 21 ..30';\n            } else if (i < 40) {\n              range = ' 31 ..40';\n            } else if (i < 50) {\n              range = ' 41 ..50';\n            } else if (i < 60) {\n              range = ' 51 ..60';\n            } else if (i < 70) {\n              range = ' 61 ..70';\n            } else {\n              range = ' 70 ...';\n            }\n\n            if (!sections[range]) {\n              sections[range] = [entry];\n            } else {\n              sections[range].push(entry);\n            }\n\n            i += 1;\n          });\n\n          setSections(sections);\n          setLoading(false);\n          setError(false);\n        } else {\n          const newsEntries = [] as Entry[];\n\n          // eslint-disable-next-line array-callback-return\n          items.map((item) => {\n            const article = {\n              ...item,\n              orderNo: getOrder(item.publishedDateJS),\n              publishedDate: DateTime.fromISO(item.publishedDateJS).toLocal().toFormat('ccc d.m.yyyy HH:mm'),\n              timeSince: timeSince(item.publishedDateJS),\n            };\n\n            newsEntries.push(article);\n          });\n\n          // Other categories are grouped by time\n          newsEntries.sort((a, b) => a.orderNo - b.orderNo);\n\n          newsEntries.forEach((entry) => {\n            // Put each item in a section\n            // If we don't have section for particular time, create new one,\n            // Otherwise just add item to existing section\n            if (!sections[entry.timeSince]) {\n              sections[entry.timeSince] = [entry];\n            } else {\n              sections[entry.timeSince].push(entry);\n            }\n          });\n\n          setSections(sections);\n          setLoading(false);\n          setError(false);\n        }\n      })\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        setLoading(false);\n        setError(true);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  // const renderItems = ({artileID, title, shortDescription}) => {\n  //   return (\n  //     <View key={artileID}>\n  //         <Text>\n  //           {title}\n  //         </Text>\n  //         <Text>\n  //           {shortDescription}\n  //         </Text>\n  //     </View>\n  //   )\n  // }\n\n  const Results = (props: Props) => {\n    if (props.isLoading) {\n      return <ActivityIndicator animating={true} />;\n    }\n\n    if (props.isError) {\n      return <Text>Failed to load news!</Text>;\n    }\n\n    return (\n      <ScrollView\n        contentContainerStyle={[styles.contentContainer]}\n        style={[styles.container, { backgroundColor: colors.card }]}\n      >\n        {Object.keys(sections).map((section, index) => (\n          <View key={index} style={styles.articleContainer}>\n            <SectionHeader colors={colors} section={section} />\n            {sections[section].map((article: Entry, index) => (\n              // console.log({ article });\n              <TouchableOpacity\n                key={index}\n                onPress={() => {\n                  navigation.navigate('WebView', {\n                    link: article.link,\n                    title: article.title,\n                  });\n                  WebBrowser.openBrowserAsync(article.link).catch(console.error);\n                }}\n                style={styles.entryContainer}\n              >\n                <Image source={{ uri: article.picture }} style={[styles.entryImage]} />\n                <View style={styles.entryContent}>\n                  <Text style={[styles.title, { color: colors.text }]}>{article.title}</Text>\n                  <Text style={[styles.source, { color: colors.text }]}>\n                    {article.author} - {article.publishedDate}\n                  </Text>\n                  <Text style={[styles.description, { color: colors.text }]}>{article.shortDescription}</Text>\n                </View>\n              </TouchableOpacity>\n            ))}\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  function handlePoweredPress() {\n    // WebBrowser.openBrowserAsync('https://high.fi');\n    navigation.navigate('WebView', {\n      link: 'https://high.fi',\n      title: 'High.fi',\n    });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Results isError={error} isLoading={loading} />\n\n      <View style={[styles.footerContainer, { backgroundColor: colors.card }]}>\n        <TouchableOpacity onPress={handlePoweredPress}>\n          <Text style={styles.footerInfoText}>\n            Powered by <Text style={styles.linkText}>high.fi</Text>\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default Homescreen;\n","/* eslint-disable react/forbid-component-props */\nimport React from 'react';\nimport { ColorValue, StyleSheet, Switch, Text, View } from 'react-native';\n\nconst style = StyleSheet.create({\n  defaultContainerStyle: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    minHeight: 50,\n    padding: 0,\n  },\n  defaultDescriptionStyle: {\n    flex: 0,\n    fontSize: 12,\n    paddingLeft: 16,\n    paddingRight: 8,\n  },\n  defaultDisabledOverlayStyle: {\n    backgroundColor: 'rgba(255,255,255,0.6)',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  defaultSwitchWrapperStyle: {\n    flex: 0,\n    flexDirection: 'row',\n    marginRight: 64,\n    paddingLeft: 8,\n  },\n  defaultTitleStyle: {\n    flex: 0,\n    fontSize: 16,\n    paddingLeft: 16,\n    paddingRight: 8,\n  },\n  titleWrapper: { flex: 1, position: 'relative' },\n});\n\nconst SettingsSwitch: React.FC<{\n  // containerProps?: object;\n  containerStyle?: object;\n  description?: string;\n  // descriptionProps?: object;\n  descriptionStyle?: object;\n  disabled?: boolean;\n  // disabledOverlayStyle?: object;\n  onValueChange?: any;\n  // switchProps?: object;\n  // switchWrapperProps?: object;\n  // switchWrapperStyle?: object;\n  title: string;\n  // titleProps?: object;\n  titleStyle?: object;\n  trackColor?: { false?: ColorValue | null | undefined; true?: ColorValue | null | undefined } | undefined;\n  value: boolean;\n}> = ({\n  containerStyle,\n  description,\n  descriptionStyle,\n  disabled,\n  onValueChange,\n  title,\n  titleStyle,\n  trackColor,\n  value,\n}) => (\n  <View style={[style.defaultContainerStyle, containerStyle]}>\n    <View style={style.titleWrapper}>\n      <Text style={[style.defaultTitleStyle, titleStyle]}>{title}</Text>\n      {description ? <Text style={[style.defaultDescriptionStyle, descriptionStyle]}>{description}</Text> : null}\n      {disabled ? <View style={[style.defaultDisabledOverlayStyle]} /> : null}\n    </View>\n    <View style={[style.defaultSwitchWrapperStyle]}>\n      <Switch disabled={disabled} onValueChange={onValueChange} trackColor={trackColor} value={value} />\n    </View>\n  </View>\n);\n\nexport default SettingsSwitch;\n","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable react/function-component-definition */\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '@react-navigation/native';\n// import * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport SettingsSwitch from '../components/Switch';\n\nexport default function SettingsScreen() {\n  const [isMobileModeEnabled, setIsMobileModeEnabled] = useState(false);\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView\n      contentContainerStyle={[styles.contentContainer]}\n      style={[styles.container, { backgroundColor: colors.card }]}\n    >\n      <View key=\"application\">\n        <Text style={[styles.titleStyle, { color: colors.text }]}>Information</Text>\n        <View>\n          <OptionButton\n            icon=\"md-compass\"\n            isLastOption={true}\n            label=\"Highlakka on GitHub\"\n            onPress={\n              () => {}\n              // WebBrowser.openBrowserAsync(\n              //   'https://github.com/walokra/highlakka',\n              // )\n            }\n          />\n        </View>\n      </View>\n\n      <View>\n        <Text style={[styles.titleStyle, { color: colors.text }]}>General</Text>\n        <SettingsSwitch\n          containerStyle={{ backgroundColor: colors.card }}\n          onValueChange={(value: any) => {\n            console.log('use mobile mode:', value);\n            setIsMobileModeEnabled(value);\n          }}\n          title=\"Use mobile mode\"\n          titleStyle={{ color: colors.text }}\n          value={isMobileModeEnabled}\n        />\n      </View>\n    </ScrollView>\n  );\n}\n\nconst OptionButton = ({ icon, isLastOption, label, onPress }) => {\n  const { colors } = useTheme();\n\n  return (\n    <RectButton\n      onPress={onPress}\n      style={[styles.option, isLastOption && styles.lastOption, { backgroundColor: colors.card }]}\n    >\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons color=\"rgba(0,0,0,0.35)\" name={icon} size={22} />\n        </View>\n        <View>\n          <Text style={[styles.optionText, { color: colors.text }]}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fafafa',\n    flex: 1,\n    flexDirection: 'row',\n    minHeight: 50,\n  },\n  contentContainer: {\n    flex: 1,\n    minHeight: 50,\n    paddingTop: 15,\n    // alignItems: 'center',\n  },\n  lastOption: {},\n  option: {\n    backgroundColor: '#fdfdfd',\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n    paddingHorizontal: 5,\n    paddingVertical: 5,\n  },\n  optionIconContainer: {\n    marginLeft: 12,\n    marginRight: 12,\n  },\n  optionText: {\n    alignSelf: 'flex-start',\n    fontSize: 15,\n    marginTop: 1,\n  },\n  titleStyle: {\n    flex: 0,\n    fontSize: 16,\n    paddingLeft: 16,\n    paddingRight: 8,\n  },\n});\n","/* eslint-disable jsx-a11y/iframe-has-title */\n/* eslint-disable import/prefer-default-export */\nimport React, { CSSProperties } from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { WebView } from 'react-native-webview';\n\nconst iFrameStyles: CSSProperties = {\n  height: '100%',\n  top: 0,\n  width: '100%',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%',\n  },\n});\n\nexport const NativeWebView = ({ target }): JSX.Element => {\n  if (Platform.OS === 'web') {\n    return <iframe src={target} style={iFrameStyles} />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <WebView\n        scalesPageToFit={true}\n        source={{ uri: target }}\n        // javaScriptEnabled\n        // domStorageEnabled\n        // allowFileAccessFromFileURLs\n        startInLoadingState={true}\n        // originWhitelist={['*']}\n        // mixedContentMode=\"compatibility\"\n        // useWebKit={true}\n      />\n    </View>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable react/forbid-component-props */\n/* eslint-disable react/function-component-definition */\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { NativeWebView } from '../components/NativeWebview';\n\nexport default function WebViewScreen({ route }) {\n  const { link } = route.params;\n\n  return (\n    <View style={styles.container}>\n      <NativeWebView target={link} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/function-component-definition */\n/* eslint-disable react/no-children-prop */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable react/forbid-component-props */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-no-constructed-context-values */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { Ionicons } from '@expo/vector-icons';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from '@react-navigation/drawer';\nimport { DarkTheme, DefaultTheme, NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { registerRootComponent } from 'expo';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  ActivityIndicator,\n  // Dimensions,\n  StyleSheet,\n  Text,\n  // TouchableOpacity,\n  useColorScheme,\n  View,\n} from 'react-native';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport Header from './components/Header';\nimport { CategoryContext } from './context/CategoryContext';\nimport ThemeProvider, { ThemeContext } from './context/ThemeProvider';\nimport { listCategories } from './controllers/api';\nimport useCachedResources from './hooks/useCachedResources';\nimport { Category } from './models/Category';\nimport HomeScreen from './screens/HomeScreen';\nimport SettingsScreen from './screens/SettingsScreen';\nimport WebViewScreen from './screens/WebViewScreen';\n\nconst CustomDrawerContent = (props: any) => (\n  <DrawerContentScrollView {...props}>\n    <Header {...props} />\n\n    <DrawerItemList {...props} />\n  </DrawerContentScrollView>\n);\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\n\n/* </Icon>\n  <View>\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigation.toggleDrawer();\n      }}\n    >\n      <Ionicons name=\"menu\" size={35} />\n    </TouchableOpacity>\n  </View> */\n\nconst DrawerIcon = (navigation: any) => (\n  <Ionicons\n    color=\"blue\"\n    name=\"menu\"\n    onPress={() => navigation.navigation.toggleDrawer()}\n    size={30}\n    testID=\"drawer-icon\"\n  />\n);\n\nconst Root = (props: any): JSX.Element => {\n  const { htmlFilename, title } = props.item;\n\n  return (\n    <CategoryContext.Provider value={{ htmlFilename, title }}>\n      <Stack.Navigator>\n        <Stack.Screen\n          component={HomeScreen}\n          name=\"Highlakka\"\n          // options={{\n          //   title: `Highlakka: ${title}`,\n          // }}\n          options={{\n            headerShown: false,\n          }}\n        />\n        <Stack.Screen\n          component={SettingsScreen}\n          name=\"Settings\"\n          options={{\n            title: `Settings`,\n          }}\n        />\n        <Stack.Screen\n          component={WebViewScreen}\n          name=\"WebView\"\n          options={({ route }) => ({ title: (route.params as any).title })}\n        />\n      </Stack.Navigator>\n    </CategoryContext.Provider>\n  );\n};\n\nconst EmptyScreen = () => <View style={{ alignItems: 'center', flex: 1, justifyContent: 'center' }} />;\n\nconst App = () => {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  // const dimensions = Dimensions.get('window');\n  // const isLargeScreen = dimensions.width >= 768;\n\n  const theme = useContext(ThemeContext);\n  const darkModeEnabled = theme.state.colorScheme === 'dark';\n\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const themeStatusBarStyle =\n    colorScheme === 'light' ? (darkModeEnabled ? 'dark' : 'light') : !darkModeEnabled ? 'light' : 'dark';\n\n  useEffect(() => {\n    // const languages = listLanguages(\"high.fi\")\n    const domainToUse = 'fi.high.fi';\n\n    const fetchCategories = async () => {\n      const cat = await listCategories(domainToUse, 'Suosituimmat', 'uutiset', 'Uusimmat', 'finnish');\n\n      setCategories(cat);\n      setLoading(false);\n      setError(false);\n    };\n\n    fetchCategories().catch((e) => {\n      console.error(e);\n      setLoading(false);\n      setError(true);\n    });\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n\n  if (loading) {\n    return (\n      <SafeAreaProvider>\n        <SafeAreaView style={[styles.container]}>\n          <ActivityIndicator animating={true} />\n        </SafeAreaView>\n      </SafeAreaProvider>\n    );\n  }\n\n  if (error) {\n    return (\n      <SafeAreaProvider>\n        <SafeAreaView style={[styles.container]}>\n          <Text>Failed to load news!</Text>\n        </SafeAreaView>\n      </SafeAreaProvider>\n    );\n  }\n\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer\n        theme={\n          colorScheme === 'light'\n            ? darkModeEnabled\n              ? DarkTheme\n              : DefaultTheme\n            : !darkModeEnabled\n            ? DefaultTheme\n            : DarkTheme\n        }\n      >\n        <View style={[styles.container]} testID=\"navigation-container-view\">\n          <StatusBar style={themeStatusBarStyle} />\n\n          <Drawer.Navigator\n            drawerContent={CustomDrawerContent}\n            // drawerStyle={isLargeScreen ? null : { width: '100%' }}\n            // drawerType={isLargeScreen ? 'permanent' : 'back'}\n            initialRouteName=\"Root\"\n            // overlayColor=\"transparent\"\n            screenOptions={({ navigation }) => ({\n              // eslint-disable-next-line react/no-unstable-nested-components\n              headerLeft: () => <DrawerIcon navigation={navigation} />,\n            })}\n          >\n            {categories && categories.length > 0 ? (\n              categories.map((item: Category) => (\n                <Drawer.Screen\n                  children={() => <Root item={item} />}\n                  key={item.sectionID}\n                  name={`${item.title}_${item.sectionID}`}\n                  options={{ drawerLabel: item.title, headerTitle: item.title }}\n                />\n              ))\n            ) : (\n              <Drawer.Screen component={EmptyScreen} name=\"empty\" />\n            )}\n          </Drawer.Navigator>\n        </View>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n};\n\nexport default function AppContainer(): JSX.Element {\n  return (\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flex: 1,\n  },\n  header: {\n    height: 50,\n  },\n});\n\nregisterRootComponent(App);\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-floating-promises */\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}